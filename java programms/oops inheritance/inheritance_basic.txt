/* inheritance:- father and child relationship  is called inheritance. 

disadvantages: code dupliction is increased, and length of code is also increased.

 
// application without inheritance
class A
{
void m1(){}
void m2(){}
}

class B
{
void m1(){}
void m2(){}
void m3(){}
void m4(){}
}


class C
{
void m1(){}
void m2(){}
void m3(){}
void m4(){}
void m5(){}
void m6(){}

}
*/
//advantages of inhertance: reduce the length of code, reduce the redundancies of the appliction
/* as we can see m1(),m2() methods were declared several times and increasing code dupliction
to over come such concepts. use inheritance
to use the inheritance concept we use the "extends" keyword to give access to child class 
of the already declared methods, so that dupliction can be low. we try to reuse those methods
like m1(),m2() can be used in class B(instead of again declaring it).reuse m1(),m2(),m3(),m4()
methods in the class C.*/
// to reuse the method in different class, you must develop some ralationship between two class
// to make the relationship between two class use "extends" keywords.
// inheritance also known as extensbility.

//application with inheritance
// class which provide properties is called parent class /super class/ base class
class A  // parent class 
{
void m1(){}
void m2(){}
}
 
class B extends A   //child class
                    // don't declare the m1 and m2 again instead use the inheritance concept.
                     // make the relationship between A and B 
                    // when ever we use "extends" keyword , code reusebility is deone
                   // class which inherit the properties is called child class /sub class /derived class.

{
void m3(){}
void m4(){}
}                  // class B contains four method here.
 
class C extends B    //child class
{
void m5(){}
void m6(){}
}               // class C contain six methods here.
  
class D  extends B,A // this is multiple inheritance which is not allowed in the java.
{                   // not allowed
void m7(){}      
}

// here by using inheritance we reduced the lenght of the code and redundancy of the code.




























